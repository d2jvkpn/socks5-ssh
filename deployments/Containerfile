FROM golang:1-alpine AS builder

ARG APP_Name
ARG APP_Version
ARG BUILD_Region
ARG GO_ldflags

LABEL stage=${APP_Name}_builder

RUN if [ "$BUILD_Region" = "cn" ]; then \
    echo "==> BUILD_Region: $BUILD_Region"; \
    cp /etc/apk/repositories /etc/apk/repositories.bk; \
    sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories; \
    go env -w GOPROXY="https://goproxy.cn,direct"; \
  fi

RUN apk --no-cache update && \
  apk --no-cache upgrade

WORKDIR /apps

ADD ./main.go ./go.mod ./go.sum ./project.yaml ./
#COPY ./internal ./internal
#COPY ./migrations ./migrations
COPY ./pkg ./pkg
COPY ./proto ./proto
COPY ./bin ./bin
COPY ./deployments ./deployments

COPY ./cache.local ./cache.local

RUN if [ -d ./cache.local/vendor ]; then \
    echo "==> Found cache.local/vendor"; \
    mv ./cache.local/vendor vendor; \
  fi

# in alpine, date doesn't parse %:z
# mkdir -p target && go build -o target/main -ldflags="-w -s ${GO_ldflags}" main.go
RUN mkdir -p target

# note: -trimpath will remove -ldflags
RUN go build -ldflags="-w -s ${GO_ldflags}" -o target/main main.go

####
FROM alpine:3

ARG APP_Name
ARG APP_Version
ARG BUILD_Time
ARG BUILD_Region

LABEL app=${APP_Name}

ENV TZ=${TZ:-Asia/Shanghai}
ENV APP_Name=${APP_Name}
ENV BUILD_Time=${BUILD_Time}
ENV BUILD_Region=${BUILD_Region}

RUN if [ "$BUILD_Region" = "cn" ]; then \
    echo "==> BUILD_Region: $BUILD_Region"; \
    cp /etc/apk/repositories /etc/apk/repositories.bk; \
    sed -i 's/dl-cdn.alpinelinux.org/mirrors.aliyun.com/g' /etc/apk/repositories; \
  fi

RUN apk --no-cache update && \
  apk --no-cache upgrade && \
  apk --no-cache add tzdata curl bash openssh \
  openvpn supervisor \
  gcompat bind-tools traceroute \
  expect sshpass
# ansible nmap


RUN mkdir -p /apps/target
WORKDIR /apps

COPY --from=builder /apps/target/ /apps/target/
COPY --from=builder /apps/bin/socks5_proxy.sh /apps/target/
COPY --from=builder /apps/cache.local/build.yaml /apps/

RUN cp /etc/supervisord.conf /etc/supervisord.conf.bk
COPY --from=builder /apps/deployments/supervisord.conf /etc/

# COPY ./migrations ./migrations

RUN chmod a+x /apps/target/socks5_proxy.sh

# socks5 port
EXPOSE 1080
EXPOSE 1090
EXPOSE 1099

CMD [./target/main, ssh, -config=configs/prod.yaml, -addr=:1080]
# CMD [config=configs/ssh.conf, ./target/socks5_proxy.sh, remote_host, :1080]
# CMD [supervisord, -l, logs/supervisord.log, -c, /etc/supervisord.conf]
